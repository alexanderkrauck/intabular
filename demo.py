#!/usr/bin/env python3
"""
Demo script showcasing the complete MailPipe functionality.
Includes both the Omni-Lead Parser and Adaptive Table Merger.
"""

def main():
    print("ðŸš€ MailPipe - AI-Powered Data Processing & Outreach")
    print("=" * 60)
    
    print("\nðŸ“‹ Core Systems:")
    print("âœ… Omni-Lead Parser - Universal CSV lead processing")
    print("âœ… Adaptive Table Merger - Intelligent table merging")
    print("âœ… Email Outreach Manager - Personalized campaigns")
    
    print("\nðŸŽ¯ Omni-Lead Parser Features:")
    print("â€¢ Parses ANY CSV format with leads")
    print("â€¢ Auto-detects columns (emails, names, companies, etc.)")
    print("â€¢ Validates email addresses")
    print("â€¢ Identifies enrichment platform sources")
    print("â€¢ Analyzes personalization data")
    print("â€¢ Generates personalized emails")
    print("â€¢ Exports ready-to-send outreach CSV")
    
    print("\nðŸ§  Adaptive Table Merger Features:")
    print("â€¢ Semantic understanding of table purposes")
    print("â€¢ Automatic field mapping across different schemas")
    print("â€¢ YAML-driven configuration system")
    print("â€¢ Intelligent conflict resolution")
    print("â€¢ Policy-based column management")
    print("â€¢ LLM-powered data fusion")
    
    print("\nðŸ“Š Lead Parser Usage:")
    print("# Parse any CSV format:")
    print("python lead_parser.py input.csv output.csv")
    print()
    print("# Complete outreach pipeline:")
    print("python outreach_manager.py full input.csv 10")
    print()
    print("# Step-by-step process:")
    print("python outreach_manager.py parse input.csv")
    print("python outreach_manager.py send outreach_ready.csv")
    
    print("\nðŸ”€ Table Merger Usage:")
    print("# Quick merge:")
    print("python adaptive_merger.py merge table1.csv table2.csv merged.csv")
    print()
    print("# Configure table semantics:")
    print("python adaptive_merger.py config leads.csv 'Lead generation database'")
    print()
    print("# Analyze table structure:")
    print("python adaptive_merger.py analyze my_table.csv")
    
    print("\nðŸ”§ Requirements:")
    print("â€¢ OpenAI API key (optional - has fallback mode)")
    print("â€¢ SMTP configuration for email sending")
    print("â€¢ Python packages: pandas, openai, python-dotenv, PyYAML")
    
    print("\nâœ¨ Smart Detection Examples:")
    print("â€¢ Apollo exports â†’ Detects Apollo ID, enrichment data")
    print("â€¢ LinkedIn exports â†’ Finds profile URLs, connections")
    print("â€¢ CRM + Marketing â†’ Merges customer and lead data")
    print("â€¢ Custom CSVs â†’ Auto-maps any column structure")
    print("â€¢ Mixed schemas â†’ Handles different naming conventions")
    
    print("\nðŸ“ˆ Output Analysis:")
    print("â€¢ Email validation rates")
    print("â€¢ Data completeness metrics")
    print("â€¢ Enrichment platform breakdown")
    print("â€¢ Merge strategy confidence scores")
    print("â€¢ Semantic field mappings")
    
    print("\nðŸŽ¯ Perfect for:")
    print("â€¢ Sales outreach campaigns")
    print("â€¢ Lead nurturing sequences")
    print("â€¢ Database cleaning & enrichment")
    print("â€¢ Multi-platform lead consolidation")
    print("â€¢ CRM data integration")
    print("â€¢ Marketing attribution analysis")
    
    print("\nðŸ§ª Try the Demos:")
    print("cd .aisandbox && python demo_parser.py     # Lead parser demo")
    print("cd .aisandbox && python enhanced_demo.py   # Table merger demo")
    
    print("\n" + "=" * 60)
    print("ðŸŒŸ Revolutionary Features:")
    print("   ðŸ”¥ Zero-configuration lead parsing")
    print("   ðŸ”¥ Semantic table understanding")  
    print("   ðŸ”¥ Intelligent conflict resolution")
    print("   ðŸ”¥ Policy-driven data management")
    print("   ðŸ”¥ LLM-powered field fusion")
    print()
    print("Ready to transform your data processing workflow!")
    print("Start with: python outreach_manager.py full your-leads.csv 5")
    print("Or merge:   python adaptive_merger.py merge table1.csv table2.csv")

if __name__ == "__main__":
    main() 